###########################################################
**初心者のためSphinx入門-3**
###########################################################

| このドキュメントもあくまで初歩であり、興味がある人は
| 自分自身で手を動かし、書籍やWebで公開されている情報を
| 蒐集することを推奨するものとします。

*Sphinxのお作法*

| ※ 細かい書式や図形の挿入などについては、以下を
| 　 参照することを推奨する。
|       https://www.sphinx-doc.org/ja/master/usage/restructuredtext/basics.html

*９．githubにhtmlファイルを公開する*

| ８で確認したhtmlファイルをgithubに公開してみる。
| なお、あらかじめアカウントとリポジトリは、事前に
| 用意しておくものとする。
|         $ cd ./_build\html
|         $ git init
|         $ git add .
|         $ git commit -m "first commit"
|         $ git remote add origin https://github.com/ユーザ名/リポジトリ名
|       　$ git push -u origin master
|         ※ ユーザ名と、パスワードに代わるトークンを聞かれる。
|       　　 事前に確認しておくこと。。
| 
| これでマスターデータはアップロードできるので、
| さらに公開用のブランチの作成を実施する。
|         $ git checkout -b gh-pages
|         $ git push origin gh-pages

*１０．公開ページのパーミッションやＣＳＳの設定*

| Webブラウザでgithubにログインし、作成したプロジェクトの
| リポジトリに移動したうえで、「gh-pages」のブランチに
| 移動して、「Add file」をクリックし、「Create new file」と
| 操作を進める。タイトルに「.nojekyll
| （ドットエヌオージェイイーケイワイエルエル）」と
| 入力し、本文は空欄、「commit new file」をクリックする。
| ※ これでGithubのデフォルトのCSSが無効となり、生成した
| 　 CSSがActiveになる。

| 続いて、ブラウザのページ内のタブの右端、「Setting」に遷移し、
| メニュー内の「pages」をクリックする。
| ブランチを「gh-pages」ディレクトリを「root」にした上で
| 「Save」をクリックする。これでデータが公開される。

*１１．ブラウザから、公開したページを確認する*

| https://ユーザ名.github.io/プロジェクトフォルダ/index.html
| 
| 上記を確認して、書式のズレやリンク切れが無いか、精査する。
| これができれば、読者も立派なSphinxユーザーと自負できるだろう。
